#!/bin/sh

if test "$1" = "--help";then
     echo "usage: sudo $(basename $0) [ --config | --image | --lernstick | --update ]"
     exit 0
fi

test "$(id --user)" = 0 || exec sudo "$0" "$@"

PFAD="/srv/ltsp/images"

on_exit(){
    test -f /run/ltsp-org-updater.lock && rm /run/ltsp-org-updater.lock
}

trap on_exit EXIT
trap on_exit INT

#######################unused#############################################################
#ltsp
ltsp_setup(){
    test -f /etc/ltsp/ltsp.conf && return
}

install_ltsp(){
#    if grep -q Debian /etc/issue;then
#       curl -s -o /etc/apt/sources.list.d/ltsp-ubuntu-ppa-focal.list https://ltsp.org/misc/ltsp-ubuntu-ppa-focal.list 
#       curl -s -o /etc/apt/trusted.gpg.d/ltsp_ubuntu_ppa.gpg https://ltsp.org/misc/ltsp_ubuntu_ppa.gpg  
#    else
#       add-apt-repository --yes ppa:ltsp
#    fi    
#    apt-get --yes update
#    apt-get --yes --install-recommends install ltsp ltsp-binaries

    ltsp_setup
}

unused(){
     # save passwds
     DST="/home/.config/login"
     mkdir -p $DST
     chmod 600 $DST
     cd $DST

     cp -a /etc/passwd passwd
     cp -a /etc/group group
     cp -a /etc/shadow shadow
     cp -a /etc/gshadow gshadow

     # for laptops
     cd ..

     cp /etc/ltsp/wlan.conf wlan
     
     HTML="/var/www/html"
     mkdir -p $HTML
     tar -c -z -f $HTML/config.tgz *
     cd $HTML
     md5sum config.tgz > config.tgz.md5sum
}

link_iso(){

    dirty=false
    for iso in $(find /srv/iso/ -name ".*.iso"); do
	i=$(basename -s .iso $iso)
	if ! test -f /srv/ltsp/images/$i.img;then
	    ln $iso /srv/ltsp/images/$i.img
	    dirty=true
	fi
    done
    if dirty;then ltsp ipxe;fi		    
}


###################################################################################

update_kernel(){
    if test -n "$(ls $PFAD )";then
	for I in $(ls $PFAD/*.img);do
	    BI=$(basename -s .img "$I")
	    if test "$BI" = "lernstick";then
		ltsp kernel "$BI" --kernel-initrd="live/vmlinuz* s|vmlinuz|initrd.img|"

	    else
		ltsp kernel "$BI"
	    fi
	done
    fi
}

update_config(){
     ltsp initrd
     ltsp ipxe
}



update_image(){
     ltsp image /
     update_kernel
     ltsp initrd           #maybe not needed
     ltsp ipxe
}

update_lernstick(){
	
     mkdir -p /srv/iso/lernstick
     mkdir -p /srv/ltsp/images/
     cd /srv/iso/lernstick
     NAME=$(basename -s .iso "$LERNSTICK_ISO")
     test -f "$NAME.iso.md5" || touch "$NAME.iso.md5"
     
     if wget -O "$NAME.iso.md5.tmp" "$LERNSTICK_URL/$NAME.iso.md5";then
	 if ! diff "$NAME.iso.md5" "$NAME.iso.md5.tmp" >/dev/null;then
	     if wget -c -O "$NAME.iso.tmp" "$LERNSTICK_URL/$NAME.iso" ;then
		 #we have a new image!
		 mv "$NAME.iso.md5.tmp" "$NAME.iso.md5"
		 REALNAME=$(cat "$NAME.iso.md5"|xargs|cut -d" " -f2)
		 mv "$NAME.iso.tmp" "$REALNAME"
		 echo "info: verify checksum"
		 if md5sum -c "$NAME.iso.md5"; then
		     #ok, install it
		     test -f /srv/ltsp/images/lernstick.img && rm /srv/ltsp/images/lernstick.img
		     ln "$REALNAME" /srv/ltsp/images/lernstick.img
		     cp "$NAME.iso.md5" "$REALNAME.md5"
		     update_kernel
		     ltsp initrd     #maybe not needed
		     ltsp ipxe
		     echo "info: succesfully downloaded and installed $REALNAME"
		 else
		     echo "error: md5sum did not match. purge downloaded files"
		     rm "$REALNAME"
		     rm "$NAME.iso.md5"
		 fi
		 # purge old images
		 find . -name "lernstick*.iso" -mtime +365 -exec rm \{\} \;
		 true
	     else
		 echo "error: could not download $NAME.iso"
	     fi 
	 else
	     rm "$NAME.iso.md5.tmp"
	     #echo "info: all is up to date. do nothing"
	 fi
     else
	 echo "error: could not download $NAME.iso.md5"
     fi
}


update_both(){
    if $IMAGE_ENABLE; then
	update_image 
    fi
    if $LERNSTICK_ENABLE;then
	update_lernstick
    fi
}

ltsp_daemon(){
    # puavo-package
    #mkdir -p /images
    #mkdir -p /srv/puavo-images
    #mount -o bind /srv/puavo-images /images
    #systemctl restart nfs-kernel.server.service

    . /etc/ltsp/updater.conf

    # init dnsmasq
    nm-online -s
    while ! nm-online -t 3600; do
	true
    done
    if $ROUTER; then
	DEV=$(nmcli -t -f DEVICE,TYPE connection show | grep ethernet | head -n1 | cut -d: -f2)
	nmcli device set "$DEV" managed no
	ip address add dev "$DEV" 192.168.67.1/24
	ip link set "$DEV" up
	ltsp dnsmasq --dns=1 --proxy-dhcp=0 --dns-server="1.1.1.3 1.1.1.2" 
    else
        DNS="$(grep server /etc/hosts | xargs | cut -d\  -f1)"	
	ltsp dnsmasq  # --dns-server="$DNS"
    fi

    # init nfs
    if ! test -f /etc/exports.d/ltsp-nfs.exports; then
	ltsp nfs
    fi

    
    # update initrd
    while true; do
	make --makefile /etc/ltsp/conf/Makefile update
	#link_iso
	sleep 60
    done
}


#main


# checks and specials
#if ! test -f /etc/ltsp/ltsp.conf; then
#    if test "$1" = "--install"; then
#	install_ltsp
#    else
#	echo "usage: sudo $(basename $0) --install"
#    fi
#    exit 0
#else
    if test "$1" = "--daemon"; then
	ltsp_daemon
	#never reaches here!
	exit 1
    fi
#fi

#ok

. /etc/ltsp/updater.conf

if ! test -f /run/ltsp-org-updater.lock;then
    touch /run/ltsp-org-updater.lock
    case "$1" in
 	 --help)
	     echo "usage: sudo $(basename $0) [ --start | --stop | --enable | --disable | --config | --image | --lernstick | --update ]"
	     ;;	    
	 --cron)   
	     echo "$UPDATER_START * * * root /usr/bin/systemctl start ltsp-org-updater.service" > /etc/cron.d/ltsp-org-updater-start
             echo "$UPDATER_STOP * * * root /usr/bin/systemctl stop  ltsp-org-updater.service" > /etc/cron.d/ltsp-org-updater-stop
	     systemctl restart cron.service
	     ;;
	 --start)
	     systemctl start dnsmasq.service
	     sleep 5
	     systemctl start ltsp-org-daemon.service
	     ;;
	 --stop)
	     systemctl stop ltsp-org-daemon.service
	     systemctl stop dnsmasq.service
	     #ltsp dnsmasq -p0 -r0
	     ;;
	 --disable)
	     systemctl disable ltsp-org-daemon.service
	     systemctl disable dnsmasq.service
	     #ltsp dnsmasq -p0 -r0
	     ;;
	 --enable)
	     systemctl enable ltsp-org-daemon.service
	     systemctl enable dnsmasq.service
	     ;;
	 --update)
 	     #also called by cron once a day
	     update_both
	     ;;
	 --config)
	     update_config
	     ;;
	 --image)
 	     update_image
	     ;;
	 --lernstick)
	     update_lernstick
	     ;;
	 *)
	     echo "usage: sudo $(basename $0) [ --config | --image | --lernstick | --update ]"
	     ;;	    
    esac
    test -f /run/ltsp-org-updater.lock && rm /run/ltsp-org-updater.lock 
else
    echo "info: ltsp-org-updater is busy. try later again"
fi

exit
