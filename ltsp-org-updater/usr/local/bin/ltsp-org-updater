#!/bin/sh

test "$(id --user)" = 0 || exec sudo $0 $@

PFAD="/srv/ltsp/images"


#ltsp
ltsp_prepare(){
    test -f /etc/ltsp/ltsp.conf && return

    mkdir -p /etc/ltsp
    
    cat <<EOF >  /etc/ltsp/ltsp.conf
[server]
ADD_IMAGE_EXCLUDES="/etc/ltsp/add-image.excludes"
KERNEL_PARAMETERS="locales=es_ES.UTF-8 keyboard-layouts=es,ch,us timezone='Europe/Zurich' "
#DEFAULT_IMAGE="x86_64"
[common]
#GDM3_CONF="WaylandEnable=false"  
[clients]
#CRONTAB_x="30 15 * * * poweroff"
POST_INIT_SET_LOCALE="/etc/ltsp/set-locales.sh" 
EOF

    cat <<EOF > /etc/ltsp/add-image.excludes
usr/local/bin/ltsp-org-updater
usr/share/applications/org.gnome.Software.desktop
usr/bin/gnome-software
EOF

    mkdir -p /srv/tftp
    cat <<EOF > /srv/tftp/Makefile
DIR:=ltsp

.PHONY: update
update: /srv/ltsp/images/dummy $(DIR)/ltsp.ipxe $(DIR)/ltsp.img 

/srv/ltsp/images/dummy:
	test -f /srv/ltsp/images/dummy || touch /srv/ltsp/images/dummy

$(DIR)/ltsp.ipxe: /srv/ltsp/images/*
	echo ltsp-org-updater --kernel
	ltsp ipxe

$(DIR)/ltsp.img: /etc/passwd /etc/group /etc/shadow /etc/ltsp/*
	ltsp initrd
EOF

    echo "* * * * * root /usr/local/bin/ltsp-org-updater --cron-tftp" > /etc/cron.d/ltsp-org-updater_cron-tftp
    echo "22 22 * * * root /usr/local/bin/ltsp-org-updater --cron-images" > /etc/cron.d/ltsp-org-updater_cron-images
    
    
}

install_ltsp(){
    if grep -q Debian /etc/issue;then
       curl -s -o /etc/apt/sources.list.d/ltsp-ubuntu-ppa-focal.list https://ltsp.org/misc/ltsp-ubuntu-ppa-focal.list 
       curl -s -o /etc/apt/trusted.gpg.d/ltsp_ubuntu_ppa.gpg https://ltsp.org/misc/ltsp_ubuntu_ppa.gpg  
    else
       add-apt-repository --yes ppa:ltsp
    fi    

    apt-get --yes update
    for P in debconf dnsmasq nfs-kernel-server ssh squashfs-tools ethtool net-tools epoptes epoptes-client sshfs man-db wget ; do
	echo "===================== $P =========================================="
	apt-get --yes install $P
    done
    apt-get --yes --install-recommends install ltsp ltsp-binaries
    ltsp_prepare
}


update_kernel(){
    for I in $(ls $PFAD/*.img);do
	BI=$(basename -s .img $I)
	if test "$BI" = "lernstick";then
	    ltsp kernel $BI --kernel-initrd="live/vmlinuz* s|vmlinuz|initrd.img|"

	else
	    ltsp kernel $BI
	fi
    done
}


update_config(){
    while ! nm-online -t 3600; do
	true
    done 
    ltsp dnsmasq
    ltsp nfs
    update_kernel
    ltsp initrd
    ltsp ipxe
}

update_image(){
    ltsp image /
    #update_config
}

update_lernstick(){
    mkdir -p /srv/iso/
    mkdir -p /srv/ltsp/images/
    cd /srv/iso
    URL="https://releases.lernstick.ch"
    NAME="lernstick_debian11_latest"
    test -f $NAME.iso.md5 || touch $NAME.iso.md5
    if wget -O $NAME.iso.md5.tmp $URL/$NAME.iso.md5 2>/dev/null;then
	if ! diff $NAME.iso.md5 $NAME.iso.md5.tmp >/dev/null;then
	    if wget -c -O $NAME.iso.tmp $URL/$NAME.iso ;then
		#we have a new image!
		mv $NAME.iso.md5.tmp $NAME.iso.md5
		REALNAME=$(cat $NAME.iso.md5|xargs|cut -d" " -f2)
		mv $NAME.iso.tmp $REALNAME
		if md5sum -c $NAME.iso.md5; then
		    #ok, install it
		    test -f ../ltsp/images/lernstick.img && rm ../ltsp/images/lernstick.img
		    ln $REALNAME ../ltsp/images/lernstick.img
		    #update_config
		    echo "info: succesfully downloaded and installed $REALNAME"
		else
		    echo "error: md5sum did not match. purge downloaded files"
		    rm $REALNAME
		    rm $NAME.iso.md5
		fi
		# purge old images
		find . -name lernstick*.iso -mtime +365 -exec rm \{\} \;
	    else
		echo "error: could not download $NAME.iso"
	    fi
	else
	    rm $NAME.iso.md5.tmp
	    #echo "info: all is up to date. do nothing"
	fi
    else
	echo "error: could not download $NAME.iso.md5"
    fi
}


#main
if test "$1" = "--install" -o -n "$(command -v ltsp)";then
    case "$1" in
	 #called by cron once a minute
	 --cron-tftp)
	     make --directory /srv/tftp update
	     ;;
	 #only called by --make-tftp (a bit ugly so ....)
	 --kernel)
	     update_kernel
	     ;;
	 #called by cron once a day (or by user)
	 --cron-images)
	     #UPTIME=$(cat /proc/uptime|cut -d\  -f1|cut -d. -f1)
	     #if test "$UPTIME" -gt 120;then
		 if test -f $PFAD/x86_64.img; then
		     update_image
		 fi
		 if test -f $PFAD/lernstick.img;then
		     update_lernstick
		 fi 
	     #fi
	     ;;
	 #rest is called by user
	 --install)
	     install_ltsp
	     ;;
	 --config)
	     update_config
	     ;;
	 --image)
 	     update_image
	     ;;
	 --lernstick)
	     update_lernstick
	     ;;
	 *)
	     echo "usage $(basename $0) --install | --config | --image | --lernstick | --update"
	     ;;
     esac
fi
exit
